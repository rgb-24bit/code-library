#+TITLE:      Go code snippet collection

* 目录                                                    :TOC_4_gh:noexport:
- [[#open-opens-the-specified-url-in-the-default-browser-of-the-user][Open opens the specified URL in the default browser of the user]]
- [[#determine-whether-a-file-exists][Determine whether a file exists]]
- [[#provide-interfaces-to-modify-the-default-configuration][Provide interfaces to modify the default configuration]]

* Open opens the specified URL in the default browser of the user
  #+begin_src go
    func Open(url string) error {
      var cmd string
      var args []string

      switch runtime.GOOS {
      case "windows":
        cmd = "cmd"
        args = []string{"/c", "start"}
      case "darwin":
        cmd = "open"
      default: // "linux", "freebsd", "openbsd", "netbsd"
        cmd = "xdg-open"
      }
      args = append(args, url)
      return exec.Command(cmd, args...).Start()
    }
  #+end_src

* Determine whether a file exists
  #+begin_src go
    func IsExist(path string) bool {
      _, err := os.Lstat(path)
      return !os.IsNotExist(err)
    }
  #+end_src

* Provide interfaces to modify the default configuration
  #+begin_src go
    type Option func(cfg *Config) error

    type Config struct {}

    func WithOption(val string) Option {
      return func(cfg *Config) error {
        return nil
      }
    }

    func New(options ...Option) *Config {
      cfg := &Config{}
      for _, option := range options {
        if err := option(cfg); err != nil {
          panic(err)
        }
      }
      return cfg
    }
  #+end_src
  
